{"ast":null,"code":"var _jsxFileName = \"/home/steffen/udacity/solution_project_trivia/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/questions',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-question-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`,\n      //TODO: update request URL\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \" Add a New Trivia Question \"), \" \", /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Question \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Answer \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Difficulty \", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"difficulty\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \" 1 \"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 47\n      }\n    }, \" 2 \"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 47\n      }\n    }, \" 3 \"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 47\n      }\n    }, \" 4 \"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 47\n      }\n    }, \" 5 \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Category \", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"category\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }\n    }, \" \", Object.keys(this.state.categories).map(id => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }\n      }, \" \", this.state.categories[id], \" \");\n    }), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })), \" \");\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/home/steffen/udacity/solution_project_trivia/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","constructor","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","target","name","value","categories","componentDidMount","render","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            question: \"\",\n            answer: \"\",\n            difficulty: 1,\n            category: 1,\n            categories: {}\n        }\n    }\n\n    componentDidMount() {\n        $.ajax({\n            url: `/categories`, //TODO: update request URL\n            type: \"GET\",\n            success: (result) => {\n                this.setState({\n                    categories: result.categories\n                })\n                return;\n            },\n            error: (error) => {\n                alert('Unable to load categories. Please try your request again')\n                return;\n            }\n        })\n    }\n\n\n    submitQuestion = (event) => {\n        event.preventDefault();\n        $.ajax({\n            url: '/questions', //TODO: update request URL\n            type: \"POST\",\n            dataType: 'json',\n            contentType: 'application/json',\n            data: JSON.stringify({\n                question: this.state.question,\n                answer: this.state.answer,\n                difficulty: this.state.difficulty,\n                category: this.state.category\n            }),\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            success: (result) => {\n                document.getElementById(\"add-question-form\").reset();\n                return;\n            },\n            error: (error) => {\n                alert('Unable to add question. Please try your request again')\n                return;\n            }\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render() {\n        return ( <\n            div id = \"add-form\" >\n            <\n            h2 > Add a New Trivia Question < /h2> <\n            form className = \"form-view\"\n            id = \"add-question-form\"\n            onSubmit = {\n                this.submitQuestion\n            } >\n            <\n            label >\n            Question <\n            input type = \"text\"\n            name = \"question\"\n            onChange = {\n                this.handleChange\n            }\n            /> < /\n            label > <\n            label >\n            Answer <\n            input type = \"text\"\n            name = \"answer\"\n            onChange = {\n                this.handleChange\n            }\n            /> < /\n            label > <\n            label >\n            Difficulty <\n            select name = \"difficulty\"\n            onChange = {\n                this.handleChange\n            } >\n            <\n            option value = \"1\" > 1 < /option> <\n            option value = \"2\" > 2 < /option> <\n            option value = \"3\" > 3 < /option> <\n            option value = \"4\" > 4 < /option> <\n            option value = \"5\" > 5 < /option> < /\n            select > <\n            /label> <\n            label >\n            Category <\n            select name = \"category\"\n            onChange = {\n                this.handleChange\n            } > {\n                Object.keys(this.state.categories).map(id => {\n                    return ( <\n                        option key = {\n                            id\n                        }\n                        value = {\n                            id\n                        } > {\n                            this.state.categories[id]\n                        } < /option>\n                    )\n                })\n            } <\n            /select> < /\n            label > <\n            input type = \"submit\"\n            className = \"button\"\n            value = \"Submit\" / >\n            <\n            /form> < /\n            div >\n        );\n    }\n}\n\nexport default FormView;"]},"metadata":{},"sourceType":"module"}